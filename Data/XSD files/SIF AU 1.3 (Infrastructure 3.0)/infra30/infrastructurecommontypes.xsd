<?xml version="1.0" encoding="UTF-8"?>
<!-- targetNamespace omitted so that these types gain their parents namespace. -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

  <xs:complexType name="errorType">
    <xs:sequence>
      <xs:element name="code" type="xs:unsignedInt">
        <xs:annotation>
          <xs:appinfo>
            <elementName>Code</elementName>
            <sifChar>M</sifChar>
          </xs:appinfo>
          <xs:documentation>Corresponds to the value contained in the HTTPS Header Status-Code” field in which the Error Object is the payload.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="scope">
        <xs:annotation>
          <xs:appinfo>
            <elementName>Scope</elementName>
            <sifChar>M</sifChar>
          </xs:appinfo>
          <xs:documentation>Attempted operation.  Ex: “Modify Student”</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="80"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="message">
        <xs:annotation>
          <xs:appinfo>
            <elementName>Message</elementName>
            <sifChar>M</sifChar>
          </xs:appinfo>
          <xs:documentation>A simple, easy to understand, compact description of the error. The primary consumer of this message is the application user. Example: "Unable to open database."</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:string">
            <xs:maxLength value="1024"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="description" type="xs:string">
        <xs:annotation>
          <xs:appinfo>
            <elementName>Description</elementName>
            <sifChar>M</sifChar>
          </xs:appinfo>
          <xs:documentation>An optional error description that is more complete and technical in nature. It is to be used as a diagnostic message in trouble-shooting procedures.  Example: "The 'Students' table is opened in exclusive mode by user 'ADM1' (dbm.cpp, line 300)."</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:token"/>
  </xs:complexType>

  <xs:simpleType name="uuidType">
    <xs:restriction base="xs:token">
      <xs:pattern
        value="[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[14][a-fA-F0-9]{3}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="versionType">
    <xs:restriction base="xs:token">
      <xs:pattern value="[0-9]{1,3}[.][0-9]{1,3}([.][0-9]{1,3})?"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:simpleType name="uriType">
    <xs:restriction base="xs:anyURI">
      <xs:minLength value="0"/>
      <xs:maxLength value="2048"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="xpathType">
    <xs:sequence>
      <xs:element name="path" type="xs:token">
        <xs:annotation>
          <xs:appinfo>
            <elementName>Path</elementName>
            <sifChar>M</sifChar>
          </xs:appinfo>
          <xs:documentation>The namespace qualified XPath being expressed.</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="namespaces" type="namespaceQualifiersType">
        <xs:annotation>
          <xs:appinfo>
            <elementName>Namespaces</elementName>
            <sifChar>M</sifChar>
          </xs:appinfo>
          <xs:documentation>The grouping tag for the namespace entries used in the path.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="propertyType">
    <xs:simpleContent>
      <xs:extension base="xs:token">
        <xs:attribute name="name" use="required">
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:maxLength value="80"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>

  <xs:complexType name="protocolType">
    <xs:sequence>
      <xs:element name="location" type="xs:anyURI">
        <xs:annotation>
          <xs:appinfo>
            <elementName>Location</elementName>
            <sifChar>M</sifChar>
          </xs:appinfo>
          <xs:documentation>The URL to use when sending Requests to a Provider</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element name="properties" minOccurs="0" maxOccurs="unbounded" type="propertiesType">
        <xs:annotation>
          <xs:appinfo>
            <elementName>Properties</elementName>
            <sifChar>O</sifChar>
          </xs:appinfo>
          <xs:documentation>May contain zero or more property elements containing name/value pairs describing any protocol settings required to ensure proper communication</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="productIdentityType">
    <xs:sequence>
      <xs:element minOccurs="0" name="vendorName">
        <xs:annotation>
          <xs:appinfo>
								<elementName>Vendor</elementName>
								<sifChar>O</sifChar>
							</xs:appinfo>
          <xs:documentation>The name of the company supplying this Product.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:maxLength value="256"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="1" name="productName">
        <xs:annotation>
          <xs:appinfo>
								<elementName>Product</elementName>
								<sifChar>M</sifChar>
							</xs:appinfo>
          <xs:documentation>The name of the Product</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:maxLength value="256"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element minOccurs="0" name="productVersion">
        <xs:annotation>
          <xs:appinfo>
								<elementName>Product Version</elementName>
								<sifChar>O</sifChar>
							</xs:appinfo>
          <xs:documentation>The format of this field is undefined, but it should match the format used in the agent's conformance statement, if the agent is SIF Certified.</xs:documentation>
        </xs:annotation>
        <xs:simpleType>
          <xs:restriction base="xs:token">
            <xs:maxLength value="80"/>
          </xs:restriction>
        </xs:simpleType>
      </xs:element>
      <xs:element name="iconURI" minOccurs="0" type="xs:anyURI">
        <xs:annotation>
          <xs:appinfo>
            <elementName>Icon URI</elementName>
            <sifChar>O</sifChar>
          </xs:appinfo>
          <xs:documentation>HTTP URL referencing an icon for graphical representation of the application/agent. Should range from 16x16 pixels to 128x128 pixels and be of an image MIME type commonly supported by Web browsers (e.g. PNG, JPEG, GIF).</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:simpleType name="serviceTypeType">
    <xs:restriction base="xs:token">
      <xs:pattern value="UTILITY"/>
      <xs:pattern value="OBJECT"/>
      <xs:pattern value="FUNCTION"/>
    </xs:restriction>
  </xs:simpleType>

  <xs:complexType name="provisionedZonesType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" minOccurs="1" name="provisionedZone"
        type="provisionedZoneType">
        <xs:annotation>
          <xs:documentation>A specific Zone defined for this environment.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>

  <xs:complexType name="zoneType">
    <xs:sequence>
      <xs:element minOccurs="0" name="description" type="xs:normalizedString">
        <xs:annotation>
          <xs:appinfo>
						<elementName>Description</elementName>
						<sifChar>O</sifChar>
					</xs:appinfo>
          <xs:documentation>A short (possibly multi-sentence) description of the Zone</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:element minOccurs="0" name="properties" type="propertiesType"> </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="uuidType"/>
  </xs:complexType>

  <xs:complexType name="propertiesType">
    <xs:sequence>
      <xs:element name="property" type="propertyType">
        <xs:annotation>
          <xs:appinfo>
                  <elementName>Property</elementName>
                  <sifChar>MR</sifChar>
                </xs:appinfo>
          <xs:documentation>Individual setting</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="namespaceQualifierType">
    <xs:sequence>
      <xs:element name="prefix" type="xs:token" nillable="true">
        <xs:annotation>
          <xs:appinfo>
                        <elementName>Prefix</elementName>
                        <sifChar>M</sifChar>
                      </xs:appinfo>
          <xs:documentation>The short prefix used to signify this namespace in the path.  nil = default</xs:documentation>
        </xs:annotation>
      </xs:element>
      <xs:choice>
        <xs:element name="static" type="xs:anyURI">
          <xs:annotation>
            <xs:appinfo>
                          <elementName>Static</elementName>
                          <sifChar>C</sifChar>
                        </xs:appinfo>
            <xs:documentation>Use this tag when communicating the exact namespace.  ex:  http://www.sifinfo.org/infrastructure/2.x</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="startsWith" type="xs:token">
          <xs:annotation>
            <xs:appinfo>
                          <elementName>Starts With</elementName>
                          <sifChar>C</sifChar>
                        </xs:appinfo>
            <xs:documentation>Use this tag when the namespace should be looked up (from the related XML) by how it starts.  ex:  http://www.sifassociation.org/datamodel/US/3.</xs:documentation>
          </xs:annotation>
        </xs:element>
        <xs:element name="regularExpression" type="xs:string">
          <xs:annotation>
            <xs:appinfo>
                          <elementName>Regular Expression</elementName>
                          <sifChar>C</sifChar>
                        </xs:appinfo>
            <xs:documentation>Use this tag when the namespace should be looked up (from the related XML) by matching a regular expression.  see:  http://www.w3.org/TR/xmlschema-2/#regexs  ex:  http://sifassociation.org/datamodel/US/3\.[0-9]+\.?[0-9]*</xs:documentation>
          </xs:annotation>
        </xs:element>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="namespaceQualifiersType">
    <xs:sequence>
      <xs:element name="namespace" type="namespaceQualifierType">
        <xs:annotation>
          <xs:appinfo>
                  <elementName>Namespace</elementName>
                  <sifChar>MR</sifChar>
                </xs:appinfo>
          <xs:documentation>The tag that holds a single namespace entry together.</xs:documentation>
        </xs:annotation>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="rightValueType">
    <xs:restriction base="xs:token">
      <xs:pattern value="APPROVED"/>
      <xs:pattern value="SUPPORTED"/>
      <xs:pattern value="REJECTED"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="rightType">
    <xs:simpleContent>
      <xs:extension base="rightValueType">
        <xs:attribute name="type" use="required">
          <xs:annotation>
            <xs:appinfo>
                                           <elementName>Right Type</elementName>
                                           <sifChar>M</sifChar>
                                         </xs:appinfo>
            <xs:documentation>The type of the requested Access Right</xs:documentation>
          </xs:annotation>
          <xs:simpleType>
            <xs:restriction base="xs:token">
              <xs:pattern value="QUERY"/>
              <xs:pattern value="CREATE"/>
              <xs:pattern value="UPDATE"/>
              <xs:pattern value="DELETE"/>
              <xs:pattern value="PROVIDE"/>
              <xs:pattern value="SUBSCRIBE"/>
              <xs:pattern value="ADMIN"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="rightsType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="right" type="rightType"> </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="serviceType">
    <xs:sequence>
      <xs:element name="rights" type="rightsType"> </xs:element>
    </xs:sequence>
    <xs:attribute name="name" use="required">
      <xs:annotation>
        <xs:documentation>The name of the Service. For utilities, this is fixed to one of the defined set of Utility Service Names. For objects and functions, it is defined by the Data Model.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="contextId" use="required">
      <xs:annotation>
        <xs:documentation>The unique identity of a context element, which is associated with a Provider of this name and type operating in a Zone with this ID.  All Services with the same name in the same Zone must have different Context IDs. Only one such Service can have no Context.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
    <xs:attribute name="type" type="serviceTypeType" use="required"/>
  </xs:complexType>
  <xs:complexType name="servicesType">
    <xs:sequence>
      <xs:element maxOccurs="unbounded" name="service" type="serviceType"> </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="provisionedZoneType">
    <xs:sequence>
      <xs:element minOccurs="0" name="services" type="servicesType"> </xs:element>
    </xs:sequence>
    <xs:attribute name="id" type="xs:string" use="required">
      <xs:annotation>
        <xs:appinfo>
												<elementName>Provisioned Zone ID</elementName>
												<sifChar>M</sifChar>
											</xs:appinfo>
        <xs:documentation>The unique id of the Zone, and the key to the Zone element in the Zone Registry.</xs:documentation>
      </xs:annotation>
    </xs:attribute>
  </xs:complexType>
</xs:schema>
